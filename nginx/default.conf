#================================================================
# БЛОК №1: HTTP -> HTTPS REDIRECT
# Задача этого блока - поймать всех, кто заходит по HTTP,
# и навсегда (301) перенаправить их на HTTPS-версию сайта.
#================================================================
server {
    listen 80;
    
    # ⬇️ УКАЖИТЕ ВАШЕ ДОМЕННОЕ ИМЯ
    server_name g-stazhkov.ru www.g-stazhkov.ru;

    # Простое и эффективное перенаправление
    location / {
        return 301 https://$host$request_uri;
    }
}

#================================================================
# БЛОК №2: HTTPS SERVER
# Это основной блок, который обслуживает ваш сайт
# по защищенному соединению.
#================================================================
server {
    # Слушаем порт 443 с поддержкой SSL и HTTP/2 для скорости
    listen 443 ssl http2;

    # ⬇️ УКАЖИТЕ ВАШЕ ДОМЕННОЕ ИМЯ
    server_name your-domain.com www.your-domain.com;

    # --- ПУТИ К ВАШИМ SSL-СЕРТИФИКАТАМ ---
    # Пути должны соответствовать тому, как мы смонтировали папку в docker-compose.yml
    # (- /home/timi131/ssl:/etc/nginx/ssl:ro)
    # ⬇️ УКАЖИТЕ ИМЯ ВАШЕГО ФАЙЛА СЕРТИФИКАТА
    ssl_certificate /home/timi131/ssl/g-stazhkov.ru.crt;
    
    # ⬇️ УКАЖИТЕ ИМЯ ВАШЕГО ФАЙЛА ПРИВАТНОГО КЛЮЧА
    ssl_certificate_key /home/timi131/ssl/g-stazhkov.ru.key;

    # --- НАСТРОЙКИ БЕЗОПАСНОСТИ SSL ---
    # Используем только современные и надежные протоколы
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    
    # --- НАСТРОЙКИ САЙТА ---
    # Путь к файлам сайта внутри контейнера
    root /usr/share/nginx/html;
    index index.html;

    # Стандартная обработка запросов для статического сайта
    location / {
        try_files $uri $uri/ =404;
    }
}